#!/bin/bash

# Script c√†i ƒë·∫∑t Shadowsocks ƒë∆°n gi·∫£n tr√™n Ubuntu
# Ch·∫°y v·ªõi quy·ªÅn sudo: sudo bash install_ss.sh

# Ki·ªÉm tra quy·ªÅn root
if [ "$EUID" -ne 0 ]; then
  echo "Vui l√≤ng ch·∫°y script v·ªõi quy·ªÅn sudo"
  exit 1
fi

# M√†u s·∫Øc ƒë·ªÉ hi·ªÉn th·ªã
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# C·∫≠p nh·∫≠t danh s√°ch g√≥i ph·∫ßn m·ªÅm
echo -e "${YELLOW}[1] C·∫≠p nh·∫≠t danh s√°ch g√≥i ph·∫ßn m·ªÅm...${NC}"
apt update -q

# C√†i ƒë·∫∑t c√°c g√≥i c·∫ßn thi·∫øt
echo -e "${YELLOW}[2] C√†i ƒë·∫∑t c√°c g√≥i c·∫ßn thi·∫øt...${NC}"
apt install -y -q python3-pip net-tools curl wget qrencode

# C√†i ƒë·∫∑t Shadowsocks th√¥ng qua pip
echo -e "${YELLOW}[3] C√†i ƒë·∫∑t Shadowsocks...${NC}"
pip3 install shadowsocks

# T·∫°o th∆∞ m·ª•c c·∫•u h√¨nh
CONF_DIR="/etc/shadowsocks"
mkdir -p $CONF_DIR

# T·∫°o m·∫≠t kh·∫©u ng·∫´u nhi√™n (16 k√Ω t·ª±)
PASSWORD=$(openssl rand -base64 12 | tr -d '/+=' | head -c 16)

# Ch·ªçn c·ªïng ng·∫´u nhi√™n (10000-60000)
PORT=$(shuf -i 10000-60000 -n 1)

# L·∫•y ƒë·ªãa ch·ªâ IP c√¥ng khai
SERVER_IP=$(curl -s https://api.ipify.org)

# Ch·ªçn ph∆∞∆°ng th·ª©c m√£ h√≥a
METHOD="aes-256-cfb"  # Ph∆∞∆°ng th·ª©c m√£ h√≥a ph·ªï bi·∫øn, t∆∞∆°ng th√≠ch t·ªët v·ªõi h·∫ßu h·∫øt c√°c client

# T·∫°o file c·∫•u h√¨nh
echo -e "${YELLOW}[4] T·∫°o c·∫•u h√¨nh Shadowsocks...${NC}"
CONFIG_FILE="$CONF_DIR/config.json"

cat > $CONFIG_FILE << EOF
{
  "server": "0.0.0.0",
  "server_port": $PORT,
  "password": "$PASSWORD",
  "method": "$METHOD",
  "timeout": 300,
  "fast_open": true
}
EOF

# T·∫°o service file
echo -e "${YELLOW}[5] T·∫°o systemd service...${NC}"
SERVICE_FILE="/etc/systemd/system/shadowsocks.service"

cat > $SERVICE_FILE << EOF
[Unit]
Description=Shadowsocks Server
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/ssserver -c $CONFIG_FILE
Restart=on-failure
RestartSec=5
LimitNOFILE=32768

[Install]
WantedBy=multi-user.target
EOF

# M·ªü c·ªïng tr√™n t∆∞·ªùng l·ª≠a
echo -e "${YELLOW}[6] C·∫•u h√¨nh t∆∞·ªùng l·ª≠a...${NC}"

# Ki·ªÉm tra v√† m·ªü c·ªïng v·ªõi UFW
if command -v ufw &> /dev/null && ufw status | grep -q "active"; then
  echo "M·ªü c·ªïng $PORT trong UFW..."
  ufw allow $PORT/tcp
  ufw allow $PORT/udp
fi

# M·ªü c·ªïng v·ªõi iptables
echo "M·ªü c·ªïng $PORT trong iptables..."
iptables -I INPUT -p tcp --dport $PORT -j ACCEPT
iptables -I INPUT -p udp --dport $PORT -j ACCEPT

# Kh·ªüi ƒë·ªông d·ªãch v·ª•
echo -e "${YELLOW}[7] Kh·ªüi ƒë·ªông d·ªãch v·ª• Shadowsocks...${NC}"
systemctl daemon-reload
systemctl enable shadowsocks
systemctl start shadowsocks

# Ki·ªÉm tra tr·∫°ng th√°i d·ªãch v·ª•
sleep 3
if systemctl is-active --quiet shadowsocks; then
  echo -e "${GREEN}‚úÖ D·ªãch v·ª• Shadowsocks ƒë√£ ƒë∆∞·ª£c kh·ªüi ƒë·ªông th√†nh c√¥ng!${NC}"
else
  echo -e "${RED}‚ùå Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông d·ªãch v·ª• Shadowsocks.${NC}"
  echo "Xem logs: systemctl status shadowsocks"
  exit 1
fi

# Ki·ªÉm tra c·ªïng
if netstat -tuln | grep -q ":$PORT "; then
  echo -e "${GREEN}‚úÖ C·ªïng $PORT ƒëang ƒë∆∞·ª£c l·∫Øng nghe.${NC}"
else
  echo -e "${RED}‚ùå C·ªïng $PORT kh√¥ng ƒë∆∞·ª£c l·∫Øng nghe.${NC}"
  echo "Ki·ªÉm tra logs: journalctl -u shadowsocks -f"
  exit 1
fi

# T·∫°o URL Shadowsocks
echo -e "${YELLOW}[8] T·∫°o th√¥ng tin k·∫øt n·ªëi...${NC}"

# Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p t√™n
echo -e "${YELLOW}Nh·∫≠p t√™n cho k·∫øt n·ªëi Shadowsocks (ƒë·ªÉ tr·ªëng n·∫øu kh√¥ng c·∫ßn):${NC}"
read -r SS_NAME

# T·∫°o URL
USER_PASS="${METHOD}:${PASSWORD}"
BASE64_USER_PASS=$(echo -n "$USER_PASS" | base64 | tr -d '\n')

if [ -n "$SS_NAME" ]; then
  # URL encode t√™n
  ENCODED_NAME=$(echo -n "$SS_NAME" | tr -d '\n' | xxd -plain | sed 's/\(..\)/%\1/g')
  SS_URI="ss://${BASE64_USER_PASS}@${SERVER_IP}:${PORT}#${ENCODED_NAME}"
else
  SS_URI="ss://${BASE64_USER_PASS}@${SERVER_IP}:${PORT}"
fi

# T·∫°o QR code
QRCODE_PATH="/tmp/ss_qrcode.png"
qrencode -s 8 -o "$QRCODE_PATH" "$SS_URI"

# Hi·ªÉn th·ªã QR code tr·ª±c ti·∫øp trong terminal
echo -e "${YELLOW}[9] Hi·ªÉn th·ªã QR code ƒë·ªÉ qu√©t:${NC}"
qrencode -t ANSI "$SS_URI"

# T·∫°o script ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin k·∫øt n·ªëi
INFO_SCRIPT="/usr/local/bin/ss-info"
cat > $INFO_SCRIPT << EOF
#!/bin/bash
echo "============================================"
echo "üîê Th√¥ng tin k·∫øt n·ªëi Shadowsocks üîê"
echo "============================================"
echo "‚óâ Server: $SERVER_IP"
echo "‚óâ Port: $PORT"
echo "‚óâ M·∫≠t kh·∫©u: $PASSWORD"
echo "‚óâ Ph∆∞∆°ng th·ª©c m√£ h√≥a: $METHOD"
if [ -n "$SS_NAME" ]; then
  echo "‚óâ T√™n k·∫øt n·ªëi: $SS_NAME"
fi
echo "‚óâ URL: $SS_URI"
echo "============================================"
echo "üì± QR Code hi·ªÉn th·ªã ·ªü tr√™n (qu√©t b·∫±ng ·ª©ng d·ª•ng Shadowsocks tr√™n ƒëi·ªán tho·∫°i)"
echo "üì± QR Code c≈©ng ƒë∆∞·ª£c l∆∞u t·∫°i: $QRCODE_PATH"
echo "üîÑ Ki·ªÉm tra tr·∫°ng th√°i: systemctl status shadowsocks"
echo "üìã Logs: journalctl -u shadowsocks -f"
echo "üõ†Ô∏è C·∫•u h√¨nh: $CONFIG_FILE"
echo "============================================"
EOF

chmod +x $INFO_SCRIPT

# In th√¥ng tin k·∫øt n·ªëi
$INFO_SCRIPT

# Ki·ªÉm tra k·∫øt n·ªëi t·ªõi Google 
echo -e "${YELLOW}[9] Ki·ªÉm tra k·∫øt n·ªëi internet...${NC}"
if curl -s --max-time 5 https://www.google.com > /dev/null; then
  echo -e "${GREEN}‚úÖ M√°y ch·ªß c√≥ k·∫øt n·ªëi internet!${NC}"
else
  echo -e "${RED}‚ö†Ô∏è Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi Google. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi internet.${NC}"
fi

echo -e "${GREEN}C√†i ƒë·∫∑t ho√†n t·∫•t!${NC}"
echo -e "${YELLOW}ƒê·ªÉ xem l·∫°i th√¥ng tin k·∫øt n·ªëi, ch·∫°y: ss-info${NC}"
